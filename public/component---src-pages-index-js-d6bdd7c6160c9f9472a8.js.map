{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/SEO.js"],"names":["IndexPage","render","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Fragment","_components_SEO__WEBPACK_IMPORTED_MODULE_1__","href","React","Component","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","StaticQueryContext","loader","enqueue","createContext","StaticQueryDataRenderer","staticQueryData","data","query","finalData","react_default","StaticQuery","props","children","Consumer","SEO","title","description","image","pathname","article","gatsby_browser_entry_StaticQuery","_ref2","_ref2$site$siteMetada","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","Helmet","name","content","property","_728552493","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-d6bdd7c6160c9f9472a8.js","sourcesContent":["import React from \"react\";\r\nimport SEO from '../components/SEO';\r\n\r\nexport default class IndexPage extends React.Component {\r\n    render () {\r\n        return (\r\n        <>\r\n            <SEO/>\r\n            <div>\r\n                Here is my portfolio\r\n            </div>\r\n            <a href=\"/mini-teminal/\">Click here to open Mini-Terminal</a>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nconst SEO = ({ title, description, image, pathname, article }) => (\r\n  <StaticQuery\r\n    query={query}\r\n    render={({\r\n      site: {\r\n        siteMetadata: {\r\n          defaultTitle,\r\n          titleTemplate,\r\n          defaultDescription,\r\n          siteUrl,\r\n          defaultImage,\r\n          twitterUsername,\r\n        },\r\n      },\r\n    }) => {\r\n      const seo = {\r\n        title: title || defaultTitle,\r\n        description: description || defaultDescription,\r\n        image: `${siteUrl}${image || defaultImage}`,\r\n        url: `${siteUrl}${pathname || \"/\"}`,\r\n      }\r\n\r\n      return (\r\n        <>\r\n          <Helmet title={seo.title} titleTemplate={titleTemplate}>\r\n            <meta name=\"description\" content={seo.description} />\r\n            <meta name=\"image\" content={seo.image} />\r\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\r\n            {(article ? true : null) && (\r\n              <meta property=\"og:type\" content=\"article\" />\r\n            )}\r\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\r\n            {seo.description && (\r\n              <meta property=\"og:description\" content={seo.description} />\r\n            )}\r\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            {twitterUsername && (\r\n              <meta name=\"twitter:creator\" content={twitterUsername} />\r\n            )}\r\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\r\n            {seo.description && (\r\n              <meta name=\"twitter:description\" content={seo.description} />\r\n            )}\r\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\r\n          </Helmet>\r\n        </>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nexport default SEO\r\n\r\nSEO.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  image: PropTypes.string,\r\n  pathname: PropTypes.string,\r\n  article: PropTypes.bool,\r\n}\r\n\r\nSEO.defaultProps = {\r\n  title: null,\r\n  description: null,\r\n  image: null,\r\n  pathname: null,\r\n  article: false,\r\n}\r\n\r\nconst query = graphql`\r\n  query SEO {\r\n    site {\r\n      siteMetadata {\r\n        defaultTitle: title\r\n        defaultDescription: description\r\n        siteUrl: url\r\n        defaultImage: image\r\n        twitterUsername\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}