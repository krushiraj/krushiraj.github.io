{"version":3,"sources":["webpack:///./src/pages/writings.js"],"names":["StyledFilterSummary","styled","div","StyledFilter","rhythm","colourStyles","control","styles","backgroundColor","option","data","isDisabled","isFocused","isSelected","colors","skyblue","blue","color","cursor","green","multiValue","text","multiValueLabel","background","multiValueRemove","red","Filter","render","this","props","options","setQuery","searchWritings","select","setSelection","closeMenuOnSelect","components","makeAnimated","defaultValue","filter","value","indexOf","isMulti","onChange","selections","action","selection","map","console","log","className","type","name","query","e","target","onSubmit","onClick","icon","faSearch","style","margin","opacity","React","Component","BreadCrumbHeader","title","showFilter","to","WritingsIndex","state","posts","checkForKeyword","node","projSelectionCheck","projCheck","frontmatter","key","split","hasOwnProperty","toLowerCase","search","getOptionsFromProps","Object","getOwnPropertyNames","allMdx","edges","val","concat","label","charAt","toUpperCase","slice","setState","getDerivedStateFromProps","QueryString","parse","location","filters","push","length","componentDidMount","renderPosts","fields","slug","window","boxShadow","date","dangerouslySetInnerHTML","__html","excerpt","site","siteMetadata","pathname","cb","SummaryFooter","goldenred","pageQuery"],"mappings":"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","file":"component---src-pages-writings-js-9d438eaa6061140b63eb.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\nimport QueryString from \"query-string\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport { StyledPost, StyledSummary } from \"../components/styles/post\"\r\nimport { StyledCrumb } from \"../components/Layout/styles\"\r\nimport SEO from \"../components/SEO\"\r\nimport { colors } from \"../utils/theme\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\"\r\nimport Select from \"react-select\"\r\nimport makeAnimated from \"react-select/animated\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nconst StyledFilterSummary = styled.div`\r\n  display: flex;\r\n  align-items: left;\r\n\r\n  span {\r\n    border-radius: 25%;\r\n  }\r\n`\r\n\r\nconst StyledFilter = styled.div`\r\n  margin-bottom: ${rhythm(3)};\r\n\r\n  .text-query {\r\n    height: ${rhythm(1.5)};\r\n\r\n    input {\r\n      width: 100%;\r\n      border-radius: 6px 0 0 6px;\r\n    }\r\n\r\n    button {\r\n      width: ${rhythm(1.5)};\r\n      background: #fff;\r\n      border-radius: 0 6px 6px 0;\r\n      // padding: calc(${rhythm(1.5)} * 0.25) 0;\r\n    }\r\n\r\n    display: flex;\r\n  }\r\n`\r\n\r\nconst colourStyles = {\r\n  control: styles => ({ ...styles, backgroundColor: \"white\" }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    return {\r\n      ...styles,\r\n      backgroundColor: isDisabled\r\n        ? null\r\n        : isSelected\r\n        ? colors.skyblue\r\n        : isFocused\r\n        ? colors.blue\r\n        : null,\r\n      color: isDisabled\r\n        ? \"#ccc\"\r\n        : isSelected\r\n        ? true\r\n          ? \"white\"\r\n          : \"black\"\r\n        : data.color,\r\n      cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n      \":active\": {\r\n        ...styles[\":active\"],\r\n        backgroundColor: colors.green,\r\n      },\r\n    }\r\n  },\r\n  multiValue: styles => {\r\n    return {\r\n      ...styles,\r\n      backgroundColor: colors.text,\r\n    }\r\n  },\r\n  multiValueLabel: styles => ({\r\n    ...styles,\r\n    color: colors.background,\r\n  }),\r\n  multiValueRemove: styles => ({\r\n    ...styles,\r\n    color: colors.blue,\r\n    \":hover\": {\r\n      backgroundColor: colors.red,\r\n      color: \"white\",\r\n    },\r\n  }),\r\n}\r\n\r\nclass Filter extends React.Component {\r\n  render() {\r\n    const {\r\n      options,\r\n      setQuery,\r\n      searchWritings,\r\n      select,\r\n      setSelection,\r\n    } = this.props\r\n    return (\r\n      <>\r\n        <StyledFilter>\r\n          <Select\r\n            closeMenuOnSelect={false}\r\n            components={makeAnimated()}\r\n            defaultValue={options.filter(\r\n              ({ value }) => select.indexOf(value) !== -1\r\n            )}\r\n            isMulti\r\n            options={options}\r\n            styles={colourStyles}\r\n            onChange={(selections, action) => {\r\n              const selection =\r\n                selections != null ? selections.map(({ value }) => value) : []\r\n              console.log(selections, action, selection)\r\n              setSelection(selection, searchWritings)\r\n            }}\r\n          />\r\n          <div className=\"text-query\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"query\"\r\n              value={this.props.query || \"\"}\r\n              onChange={e => {\r\n                setQuery(e.target.value, searchWritings)\r\n              }}\r\n              onSubmit={searchWritings}\r\n            />\r\n            <button onClick={searchWritings}>\r\n              <FontAwesomeIcon\r\n                icon={faSearch}\r\n                style={{ margin: \"auto 0\", opacity: 0.3 }}\r\n              />\r\n            </button>\r\n          </div>\r\n        </StyledFilter>\r\n        <StyledFilterSummary></StyledFilterSummary>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst BreadCrumbHeader = props => {\r\n  const {\r\n    options,\r\n    title,\r\n    showFilter,\r\n    data,\r\n    select,\r\n    setQuery,\r\n    setSelection,\r\n    query,\r\n    searchWritings,\r\n  } = props\r\n  return (\r\n    <>\r\n      <StyledCrumb>\r\n        <span>\r\n          <Link to={\"/\"}>{title}</Link>\r\n        </span>{\" \"}\r\n        <span>{\"/\"}</span>\r\n        <span>\r\n          <Link to={\"/writings\"}>{\"writings\"}</Link>\r\n        </span>\r\n        <span>{\">\"}</span>\r\n      </StyledCrumb>\r\n      {showFilter && (\r\n        <Filter\r\n          options={options}\r\n          data={data}\r\n          select={select}\r\n          searchWritings={searchWritings}\r\n          setQuery={setQuery}\r\n          setSelection={setSelection}\r\n          query={query}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default class WritingsIndex extends React.Component {\r\n  state = {\r\n    posts: [],\r\n    query: \"\",\r\n    selection: [],\r\n    select: [\"title\", \"description\"],\r\n  }\r\n\r\n  checkForKeyword = ({ node }) => {\r\n    const projSelectionCheck =\r\n        this.state.selection.indexOf(\"Type: Project\") !== -1,\r\n      projCheck = node.frontmatter.type === \"project\"\r\n    console.log(projCheck, projSelectionCheck, node)\r\n    if (projSelectionCheck && !projCheck) {\r\n      return false\r\n    } else {\r\n      for (let key of this.state.selection) {\r\n        if (this.state.query === \"\") return true\r\n        else\r\n          for (let query of this.state.query.split(/[\\s,.]+/)) {\r\n            const subStrCheck =\r\n              node.frontmatter.hasOwnProperty(key) &&\r\n              node.frontmatter[key]\r\n                .toLowerCase()\r\n                .search(query.toLowerCase()) !== -1\r\n            if (subStrCheck) return true\r\n          }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  getOptionsFromProps = () => {\r\n    return Object.getOwnPropertyNames(\r\n      this.props.data.allMdx.edges[0].node.frontmatter\r\n    )\r\n      .filter(val => val !== \"type\")\r\n      .concat([\"Type: Project\"])\r\n      .map(key => ({\r\n        value: key,\r\n        label: key.charAt(0).toUpperCase() + key.slice(1),\r\n        color: colors.background,\r\n      }))\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    let select = []\r\n\r\n    const filterOptions = QueryString.parse(props.location.search).filters\r\n      ? QueryString.parse(props.location.search).filters.split(\",\")\r\n      : []\r\n\r\n    for (let filter of filterOptions) {\r\n      if (state.select.indexOf(filter) === -1) select.push(filter)\r\n    }\r\n    return {\r\n      select: state.select.concat(select),\r\n      selection:\r\n        state.selection.length !== 0\r\n          ? state.selection\r\n          : state.select.concat(select),\r\n    }\r\n  }\r\n\r\n  searchWritings = () => {\r\n    const data = this.props.data.allMdx.edges\r\n    let posts = data.filter(this.checkForKeyword)\r\n    this.setState({ posts: posts }, () => {})\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.searchWritings()\r\n  }\r\n\r\n  renderPosts() {\r\n    return this.state.posts.map(({ node }) => {\r\n      const title = node.frontmatter.title || node.fields.slug\r\n      return (\r\n        <StyledPost\r\n          key={node.fields.slug}\r\n          style={{\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => (window.location = node.fields.slug)}\r\n        >\r\n          <h3>\r\n            <Link style={{ boxShadow: \"none\" }} to={node.fields.slug}>\r\n              {title}\r\n            </Link>\r\n          </h3>\r\n          <small>{node.frontmatter.date}</small>\r\n          <p\r\n            dangerouslySetInnerHTML={{\r\n              __html: node.excerpt,\r\n            }}\r\n          />\r\n        </StyledPost>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { data, location } = this.props\r\n    const title = data.site.siteMetadata.title\r\n    //fetching all available options\r\n    const options = this.getOptionsFromProps()\r\n    return (\r\n      <Layout location={location}>\r\n        <SEO frontmatter={{ title: \"Writings\", slug: \"/writings\" }} />\r\n        <BreadCrumbHeader\r\n          title={title}\r\n          options={options}\r\n          data={data}\r\n          showFilter={\r\n            location.pathname === \"/writings/\" ||\r\n            location.pathname === \"/writings\"\r\n          }\r\n          searchWritings={this.searchWritings}\r\n          query={this.state.query}\r\n          setQuery={(query, cb) => this.setState({ query }, cb)}\r\n          setSelection={(selection, cb) => this.setState({ selection }, cb)}\r\n          select={this.state.select}\r\n          location={location}\r\n        />\r\n        {this.renderPosts()}\r\n        <hr />\r\n        <SummaryFooter />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nconst SummaryFooter = () => (\r\n  <StyledSummary style={{ color: colors.goldenred }}>\r\n    <strong>Reached the end.</strong> That&#39;s it for now.\r\n    <br />\r\n    Checkout this place after some time, may be I&#39;ll have new content ready\r\n    for you.\r\n  </StyledSummary>\r\n)\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMdx(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { published: { ne: false } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n            tags\r\n            type\r\n            technologies\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}