{"componentChunkName":"component---src-templates-blog-post-template-js","path":"/writings/quiz-writer-bot-blog/","webpackCompilationHash":"38bcc08a2ecdb9fb9f43","result":{"data":{"mdx":{"id":"536be53a-6d82-5674-94f0-a8234a81d3eb","parent":{"__typename":"File","sourceInstanceName":"content"},"excerpt":"In 2018, sometime between May and June. I had a remote working internship with  Verzeo Edutech . In the same period, I had to attend theâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"A bot that saved a lot of time for me.\",\n  \"date\": \"2019-01-23\",\n  \"type\": \"article\",\n  \"published\": true,\n  \"keywords\": \"quiz,quiz-writer,bot,python,selenium\",\n  \"description\": \"A article about how and why I built a bot for myself, which write MCQ based tests for me.\",\n  \"tags\": \"python,selenium,beautiful soup,bot,article\",\n  \"banner\": \"./bot-blog.png\",\n  \"bannercaption\": \"Image from Google Images\",\n  \"technologies\": \"python,selenium\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In 2018, sometime between May and June. I had a remote working internship with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://verzeo.in/\"\n  }), mdx(\"em\", {\n    parentName: \"a\"\n  }, \"Verzeo Edutech\")), \". In the same period, I had to attend the summer course of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://missionrnd.com/\"\n  }), mdx(\"em\", {\n    parentName: \"a\"\n  }, \"Mission RnD\")), \". I was able to manage and work on both the things parallelly and everything was fine. But, one day I realized that there were some mandatory quizzes assigned to us and there were only 2 days left before I should finish writing those tests.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://media.giphy.com/media/lJnAXeJO8tE7E37mxq/giphy.gif\",\n    \"alt\": null\n  }))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Lazy minds fetch the solutions faster\")), mdx(\"p\", null, \"I started to take the first quiz and felt that almost 80-90% of the questions were of type \\u2018guess the output for the following code\\u2019. So, I immediately called my friend who finished all the quizzes and asked him if my analysis was correct. I immediately got an idea to write a bot to write quizzes on behalf of me. I thought this would work because the passing score is 75% and almost 80-90% questions are \\u2018guess the output\\u2019 types which doesn\\u2019t require any human knowledge or interference. I made my mind and started writing a bot for this purpose.\"), mdx(\"p\", null, \"My choice of language for this bot was python. Because, I\\u2019m more confident and elegant at writing code in Python and huge availability of helper libraries are easy to read and write syntax. I chose my language and I have to think of how do I read the questions and mark answers for each of the questions in each test. My answer for this was \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://selenium-python.readthedocs.io/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Selenium\")), \" automated testing framework for python.\"), mdx(\"p\", null, \"So, what have I done to make the bot working? It\\u2019s just as simple as you can think. You can read about it \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/writings/quiz-writer-bot-project\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"here\"))), mdx(\"p\", null, \"That\\u2019s how I wrote a bot to write tests for myself. Each question had a tricky code and I had to guess the correct output, which would take at least a minute for each question, in the best case. Every test had 20 questions and there were 12 tests lined up for me in the pending tab. So, in the best case, it would be a 4-hour long task. I took around 30 mins to write the code which will do this for me in a few minutes. That\\u2019s how I saved my time by spending it wisely by work smart rather than working hard \\uD83D\\uDE1C  .\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://media.giphy.com/media/SLBr5yLzocSYw/giphy.gif\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"This is how I felt myself when others were writing those tests by spending a lot of time and I wrote a bot that writes those tests for me \\uD83D\\uDE0E.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"A bot that saved a lot of time for me.","date":"January 23, 2019","description":"A article about how and why I built a bot for myself, which write MCQ based tests for me.","technologies":"python,selenium","tags":"python,selenium,beautiful soup,bot,article","keywords":"quiz,quiz-writer,bot,python,selenium","banner":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='200'%3e%3cpath%20d='M200%201v99h100V1H200M1%2051v49h99V1H1v50m37-37c-10%203-18%2011-23%2020-4%209-4%2024%201%2033a38%2038%200%201051-51c-8-4-21-5-29-2m200%200a38%2038%200%2000-14%2064c15%2015%2038%2014%2053-1%2019-18%2013-50-11-62-7-3-21-4-28-1m99%200c-27%209-34%2044-14%2064a39%2039%200%201039-65c-7-2-18-1-25%201m25%2022c-3%202-6%205-6%207%200%203%204%202%205%200%201-5%208-5%2010%200%201%202%205%203%205%200%200-5-9-10-14-7m-220%2076c-35%207-41%2056-9%2072%209%205%2024%205%2033%201%2042-20%2021-82-24-73m98%200c-29%209-38%2044-17%2065%208%208%2014%2011%2027%2011%2016%200%2027-7%2034-20%2016-29-12-65-44-56M30%20132c-5%203-8%2010-4%2010l3-2c2-5%208-5%2010%200%201%202%204%203%205%201%201-1-2-7-4-8-4-2-6-2-10-1m32%200c-3%202-6%206-6%209%200%202%204%201%205-2%202-4%208-4%2010%201%201%202%206%203%206%201%200-6-8-11-15-9m71%2029c-3%203-3%203-2%205%202%201%202%201%204-1l3-2%203%203%203%202%203-3%203-2%203%203%204%203%203-3%203-3%202%202c3%202%203%202%205%201%201-2%201-2-2-5-5-5-5-5-8-1l-3%202-3-2-3-3-4%203-3%202-3-2c-3-4-4-4-8%201'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":2.002577319587629,"src":"/static/1b0ba7584b52cb269e48446c8eac1353/59139/bot-blog.png","srcSet":"/static/1b0ba7584b52cb269e48446c8eac1353/d3809/bot-blog.png 150w,\n/static/1b0ba7584b52cb269e48446c8eac1353/fdbb0/bot-blog.png 300w,\n/static/1b0ba7584b52cb269e48446c8eac1353/59139/bot-blog.png 600w,\n/static/1b0ba7584b52cb269e48446c8eac1353/cb30f/bot-blog.png 900w,\n/static/1b0ba7584b52cb269e48446c8eac1353/ba299/bot-blog.png 1200w,\n/static/1b0ba7584b52cb269e48446c8eac1353/6ddbb/bot-blog.png 2331w","srcWebp":"/static/1b0ba7584b52cb269e48446c8eac1353/6fae7/bot-blog.webp","srcSetWebp":"/static/1b0ba7584b52cb269e48446c8eac1353/87efd/bot-blog.webp 150w,\n/static/1b0ba7584b52cb269e48446c8eac1353/9ea76/bot-blog.webp 300w,\n/static/1b0ba7584b52cb269e48446c8eac1353/6fae7/bot-blog.webp 600w,\n/static/1b0ba7584b52cb269e48446c8eac1353/f39d8/bot-blog.webp 900w,\n/static/1b0ba7584b52cb269e48446c8eac1353/b6424/bot-blog.webp 1200w,\n/static/1b0ba7584b52cb269e48446c8eac1353/15f3a/bot-blog.webp 2331w","sizes":"(max-width: 600px) 100vw, 600px"}}},"bannercaption":"Image from Google Images"},"fields":{"slug":"/writings/quiz-writer-bot-blog/","socialImage":{"childImageSharp":{"original":{"width":2400,"height":1254,"src":"/static/0af4bbdc309f9065776c6fc23da1f686-b259bafe8d85d77969848ad79b2c4def.png"}}}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/writings/quiz-writer-bot-blog/","previous":{"parent":{"name":"index","sourceInstanceName":"content"},"fields":{"slug":"/writings/thoughts-on-x-platform-device-apps/"},"frontmatter":{"title":"My thoughts on cross-platform/device apps","published":true,"type":"article"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"My thoughts on cross-platform/device apps\",\n  \"date\": \"2019-06-28\",\n  \"type\": \"article\",\n  \"published\": true,\n  \"keywords\": \"cross,cross-platform,cross-device,app,application,electron,node,javascript,nodejs,electron,react-native,NAPI,react-native-bridge\",\n  \"description\": \"There Krushi is the fetch API in Node, which allows us to make a HTTP request and get some information from the servers. We can use that to make REST calls, get HTML content of a webpage and many more things.\",\n  \"tags\": \"javascript,nodejs,electron,react-native,NAPI,react-native-bridge\",\n  \"banner\": \"./crossdp.jpg\",\n  \"bannercaption\": \"Image from Google Images\",\n  \"technologies\": \"python,selenium\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"TLDR; In this article, I will share my thoughts on building modern cross-platform and cross-device applications.\")), mdx(\"h2\", null, \"What made me to think about cross-platform and cross-device applications\"), mdx(\"p\", null, \"In recent times I had few ideas which would help me make things more simplistic every day. Most of those ideas were cross-platform and cross-device applications. I\\u2019ll briefly tell about ideas(if you are interested). Few of my ideas were:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A single application for searching and editing memes. A single repository where you can find meme templates based on search keywords, also smart search based on intents.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A Universal clipboard(though Apple and Microsoft has it, I wanted it to be true cross-platform). I wanted to build this because I use a lot of devices while working on some projects. I switch between various device types and operating systems while I\\u2019m working. I wanted to share the clipboard data from one device to another without being sending it as a message to myself in slack or using a notes app on the cloud.\"))), mdx(\"h2\", null, \"Research and learnings\"), mdx(\"p\", null, \"When I started to think of building applications for these ideas, the first question that hit me was how do I make it pure cross-platform application? I went on in the search of an answer for this, read a lot of blogs, documentations, every possible resource that I could find. I knew about Xamarin, Cordova and few others which are popular for building cross-platform/device applications. After reading lots of articles on the web, I got an answer that is better than any other alternative.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"My considerations were\\nDevice types: desktops, laptops, tablets, and mobile phones\\nOperating Systems: Windows, macOS, Linux, Android, iOS\")), mdx(\"h2\", null, \"My decisions from the learning\"), mdx(\"p\", null, \"My choice was \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Electron\"), \" for desktop applications and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React Native\"), \" for mobile applications. You can write beautiful UI for desktop applications using HTML, CSS, and JavaScript, as electron provides the lightweight version of chromium and it renders only that part which used to render web-pages in browser. We can also consume node.js scripts and npm packages to get things done. You can read more about Electron \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://electronjs.org/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"here\")), \". React Native, though it is not as old as other similar libraries but it has something cool which made to stick to this, to know more about it visit this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://facebook.github.io/react-native/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"link\")), \". The first thing that made me to stick to React Native is you can write most of the UI using a single JavaScript codebase. The second thing is you can consume the native APIs and build JavaScript UI components from native components exposed by each platform. The question for frontend and basic things can be done using the above. You can read more about React Native Bridge over \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://facebook.github.io/react-native/docs/0.60/native-modules-setup\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"here\")), \".\"), mdx(\"p\", null, \"What if you\\u2019re building something that relies on system calls and low-level interactions. In such a case, you might have a question why Node.js based libraries?\"), mdx(\"p\", null, \"So, during my investigation, I found that most of the cross-platform applications were written in C++ earlier. And that is the language of choice for most of the developers to have interactions with the system at deeper/lower levels of hierarchy. So, what is the significance, why does C++ even come in the middle of this discussion? The answer is JavaScript might not have the capability to interact with system components, but C++ does have and we can have JavaScript wrappers written for any C++ code that is available and consume it natively in Node.js. This even answers our question to handle the underlying things and processes.\"), mdx(\"h2\", null, \"Conclusion\"), mdx(\"p\", null, \"One thing that I want to conclude is that there is no such library to date where you can write once and ship to different platforms and for different device form factors. But, amongst all the choices and gaining popularity for JavaScript and it\\u2019s libraries and the community support above decision were made by me.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"next":null}}}