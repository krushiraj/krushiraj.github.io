{"version":3,"sources":["webpack:///./src/components/MiniTerminalLink.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/SEO/SchemaOrg.js","webpack:///./src/components/SEO/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/CircularImage.js","webpack:///./src/components/ListItem.js","webpack:///./src/components/ListItems.js"],"names":["style","width","padding","textAlign","alignSelf","fontFamily","fontSize","className","styles","alink","href","items","name","NameTag","textDecoration","textDecorationColor","CircularImageWrapper","CircularImage","size","NavigationItems","id","ListItems","top","MiniTerminalLink","IndexPage","render","SEO","display","alignItems","justifyContent","height","React","Component","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","data","query","finalData","Fragment","StaticQuery","props","children","Consumer","m","module","exports","require","default","memo","author","siteUrl","datePublished","defaultTitle","description","image","isBlogPost","organization","title","url","baseSchema","alternateName","schema","itemListElement","position","item","headline","publisher","logo","mainEntityOfPage","type","JSON","stringify","postData","frontmatter","postImage","seo","site","siteMetadata","postMeta","childMarkdownRemark","normalizeUrl","slug","Date","date","toISOString","htmlAttributes","lang","content","property","social","twitter","SchemaOrg","defaultProps","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","replace","match","alt","src","borderRadius","clickHandler","onClick","ListItemStyles","navTopStyles","listStyle","margin","whiteSpace","overflow","navCenterStyles","resizeFunc","e","self","active","document","querySelector","target","underLine","current","left","getBoundingClientRect","window","pageXOffset","pageYOffset","selected","listItems","querySelectorAll","classList","contains","i","length","remove","borderBottom","add","setState","transform","transitionEndHandler","state","console","log","createRef","undefined","componentDidMount","addEventListener","this","map","key","ListItem","ref","transition","zIndex","onTransitionEnd"],"mappings":"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","file":"component---src-pages-index-js-26da89f6b95a2de2fc4b.js","sourcesContent":["import React from \"react\"\r\nimport styles from \"./listitem.module.css\"\r\n\r\nexport default () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        padding: \"0\",\r\n        textAlign: \"center\",\r\n        alignSelf: \"center\",\r\n      }}\r\n    >\r\n      <p style={{ fontFamily: \"Fira Code\", fontSize: \"2rem\" }}>\r\n        <a\r\n          className={styles.alink}\r\n          href=\"https://krushiraj.github.io/mini-terminal/\"\r\n        >\r\n          Mini-Terminal\r\n        </a>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport SEO from \"../components/SEO\"\r\nimport CircularImage from \"../components/CircularImage\"\r\nimport ListItems from \"../components/ListItems\"\r\nimport MiniTerminalLink from \"../components/MiniTerminalLink\"\r\n\r\nconst items = [\r\n  { name: \"about-me\" },\r\n  { name: \"my-works\" },\r\n  { name: \"experience\" },\r\n  { name: \"writings\" },\r\n  { name: \"skills\" },\r\n  { name: \"contact\" },\r\n  { name: \"resume\" },\r\n]\r\n\r\nconst NameTag = ({ name }) => {\r\n  return (\r\n    <p\r\n      style={{\r\n        textDecoration: \"underline\",\r\n        textDecorationColor: \"#e10000\",\r\n        fontSize: \"2rem\",\r\n      }}\r\n    >\r\n      {name}\r\n    </p>\r\n  )\r\n}\r\n\r\nconst CircularImageWrapper = () => {\r\n  return (\r\n    <a href=\"/\">\r\n      <CircularImage size=\"200\" />\r\n    </a>\r\n  )\r\n}\r\n\r\nconst NavigationItems = () => {\r\n  return (\r\n    <div\r\n      id=\"nav\"\r\n      style={{\r\n        width: \"100%\",\r\n        padding: \"0\",\r\n        textAlign: \"center\",\r\n        alignSelf: \"center\",\r\n      }}\r\n    >\r\n      <CircularImageWrapper />\r\n      <NameTag name=\"Krushi Raj Tula\" />\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <ListItems items={items} top={false} />\r\n        <MiniTerminalLink />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default class IndexPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <SEO />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"100vh\",\r\n          }}\r\n        >\r\n          <NavigationItems />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\r\nimport Helmet from \"react-helmet\"\r\n\r\nexport default React.memo(\r\n  ({\r\n    author,\r\n    siteUrl,\r\n    datePublished,\r\n    defaultTitle,\r\n    description,\r\n    image,\r\n    isBlogPost,\r\n    organization,\r\n    title,\r\n    url,\r\n  }) => {\r\n    const baseSchema = [\r\n      {\r\n        \"@context\": \"http://schema.org\",\r\n        \"@type\": \"WebSite\",\r\n        url,\r\n        name: title,\r\n        alternateName: defaultTitle,\r\n        description: \"Portfolio of Krushi Raj Tula\",\r\n      },\r\n    ]\r\n\r\n    const schema = isBlogPost\r\n      ? [\r\n          ...baseSchema,\r\n          {\r\n            \"@context\": \"http://schema.org\",\r\n            \"@type\": \"BreadcrumbList\",\r\n            itemListElement: [\r\n              {\r\n                \"@type\": \"ListItem\",\r\n                position: 1,\r\n                item: {\r\n                  \"@id\": url,\r\n                  name: title,\r\n                  image,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            \"@context\": \"http://schema.org\",\r\n            \"@type\": \"BlogPosting\",\r\n            url,\r\n            name: title,\r\n            alternateName: defaultTitle,\r\n            headline: title,\r\n            image: {\r\n              \"@type\": \"ImageObject\",\r\n              url: image,\r\n            },\r\n            description,\r\n            author: {\r\n              \"@type\": \"Person\",\r\n              name: author,\r\n            },\r\n            publisher: {\r\n              \"@type\": \"Organization\",\r\n              url: organization.url,\r\n              logo: organization.logo,\r\n              name: organization.name,\r\n            },\r\n            mainEntityOfPage: {\r\n              \"@type\": \"WebSite\",\r\n              \"@id\": siteUrl,\r\n            },\r\n            datePublished,\r\n          },\r\n        ]\r\n      : baseSchema\r\n\r\n    return (\r\n      <Helmet>\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">{JSON.stringify(schema)}</script>\r\n      </Helmet>\r\n    )\r\n  }\r\n)\r\n","import React from \"react\"\r\nimport Helmet from \"react-helmet\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport SchemaOrg from \"./SchemaOrg\"\r\n\r\nimport { normalizeUrl } from \"../../utils/helpers\"\r\n\r\nconst SEO = ({ postData, frontmatter = {}, postImage, isBlogPost }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            siteUrl\r\n            image\r\n            author\r\n            organization {\r\n              name\r\n              url\r\n              logo\r\n            }\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={({ site: { siteMetadata: seo } }) => {\r\n      const postMeta =\r\n        frontmatter || postData.childMarkdownRemark.frontmatter || {}\r\n\r\n      const title = postMeta.title || seo.title\r\n      const description = postMeta.description || seo.description\r\n      const image = postImage\r\n        ? normalizeUrl(`${seo.siteUrl}${postImage}`)\r\n        : null\r\n      const url = postMeta.slug\r\n        ? normalizeUrl(`${seo.siteUrl}${postMeta.slug}`)\r\n        : seo.siteUrl\r\n      const datePublished = isBlogPost\r\n        ? new Date(postMeta.date).toISOString()\r\n        : false\r\n\r\n      return (\r\n        <React.Fragment>\r\n          <Helmet htmlAttributes={{ lang: \"en\" }}>\r\n            {/* General tags */}\r\n            <title>{isBlogPost ? `${title} | ${seo.title}` : title}</title>\r\n            <meta name=\"description\" content={description} />\r\n            {image && <meta name=\"image\" content={image} />}\r\n\r\n            {/* OpenGraph tags */}\r\n            <meta property=\"og:url\" content={url} />\r\n            {isBlogPost ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n            <meta property=\"og:title\" content={title} />\r\n            <meta property=\"og:description\" content={description} />\r\n            {image && <meta property=\"og:image\" content={image} />}\r\n\r\n            {/* Twitter Card tags */}\r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            <meta name=\"twitter:site\" content={\"@\" + seo.social.twitter} />\r\n            <meta name=\"twitter:creator\" content={\"@\" + seo.social.twitter} />\r\n            <meta name=\"twitter:title\" content={title} />\r\n            <meta name=\"twitter:description\" content={description} />\r\n            {image && <meta name=\"twitter:image\" content={image} />}\r\n          </Helmet>\r\n          <SchemaOrg\r\n            isBlogPost={isBlogPost}\r\n            url={url}\r\n            title={title}\r\n            image={image}\r\n            description={description}\r\n            datePublished={datePublished}\r\n            siteUrl={seo.siteUrl}\r\n            author={seo.author}\r\n            organization={seo.organization}\r\n            defaultTitle={seo.title}\r\n          />\r\n        </React.Fragment>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nSEO.propTypes = {\r\n  isBlogPost: PropTypes.bool,\r\n  postData: PropTypes.shape({\r\n    childMarkdownRemark: PropTypes.shape({\r\n      frontmatter: PropTypes.any,\r\n      excerpt: PropTypes.any,\r\n    }),\r\n  }),\r\n  postImage: PropTypes.string,\r\n}\r\n\r\nSEO.defaultProps = {\r\n  isBlogPost: false,\r\n  postData: { childMarkdownRemark: {} },\r\n  postImage: null,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","exports.normalizeUrl = url => {\r\n  // Remove duplicate slashes\r\n  url = url.replace(/\\/{2,}/g, \"/\")\r\n\r\n  if (!url.match(/^https?:\\/\\//)) {\r\n    url = url.replace(/^(https?:\\/)(.+)/, \"$1/$2\")\r\n  }\r\n  return url\r\n}\r\n","import React from \"react\"\r\n\r\nexport default ({ size }) => {\r\n  return (\r\n    <img\r\n      alt=\"Krushi Raj\"\r\n      src=\"/krushi.jpg\"\r\n      height={`${size}px`}\r\n      width=\"auto\"\r\n      id=\"logo\"\r\n      style={{\r\n        borderRadius: \"50%\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport ListItemStyles from \"./listitem.module.css\"\r\n\r\nexport default ({ name, clickHandler }) => {\r\n  return (\r\n    <li\r\n      onClick={clickHandler}\r\n      style={{ display: \"inline-block\", padding: \"0 5px\" }}\r\n    >\r\n      <a className={ListItemStyles.alink} href={`#${name}`}>\r\n        {name}\r\n      </a>\r\n    </li>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport ListItem from \"./ListItem\"\r\n\r\nconst navTopStyles = {\r\n  listStyle: \"none\",\r\n  textAlign: \"right\",\r\n  margin: 0,\r\n  padding: 0,\r\n  whiteSpace: \"nowrap\",\r\n  width: \"100%\",\r\n  overflow: \"auto\",\r\n  height: \"60px\"\r\n}\r\n\r\nconst navCenterStyles = {\r\n  listStyle: \"none\",\r\n  margin: 0,\r\n  padding: 0,\r\n  width: \"100%\",\r\n  height: \"100%\"\r\n}\r\n\r\nexport default class ListItems extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.underLine = React.createRef()\r\n    this.state = { selected: undefined }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.resizeFunc)\r\n  }\r\n\r\n  resizeFunc = (e, self = this) => {\r\n    const active = document.querySelector(\"#nav ul li.active\")\r\n    const target = self.underLine.current\r\n\r\n\r\n    if (active) {\r\n      const left = active.getBoundingClientRect().left + window.pageXOffset\r\n      const top = active.getBoundingClientRect().top + window.pageYOffset\r\n\r\n      target.style.left = `${left}px`\r\n      target.style.top = `${top}px`\r\n    }\r\n  }\r\n\r\n  clickHandler = (e, self = this) => {\r\n    const selected = e.target\r\n    const listItems = document.querySelectorAll(\"#nav ul li a\")\r\n    const target = self.underLine.current\r\n    target.style.display = \"initial\"\r\n\r\n    if (!selected.classList.contains(\"active\")) {\r\n      for (let i = 0; i < listItems.length; i++) {\r\n        if (listItems[i].classList.contains(\"active\")) {\r\n          listItems[i].classList.remove(\"active\")\r\n          listItems[i].style.borderBottom = \"none\"\r\n        }\r\n      }\r\n      selected.classList.add(\"active\")\r\n      this.setState({ selected })\r\n\r\n      const width = selected.getBoundingClientRect().width\r\n      const height = selected.getBoundingClientRect().height\r\n      const left = selected.getBoundingClientRect().left + window.pageXOffset\r\n      const top = selected.getBoundingClientRect().top + window.pageYOffset\r\n\r\n      target.style.width = `${width}px`\r\n      target.style.height = `${height}px`\r\n      target.style.left = `${left}px`\r\n      target.style.top = `${top}px`\r\n      target.style.transform = \"none\"\r\n    }\r\n  }\r\n\r\n  transitionEndHandler = (e, self = this) => {\r\n    const { underLine: { current }, state: { selected } } = self;\r\n    console.log({ current, selected })\r\n    selected.style.borderBottom = \"2px solid #e10000\";\r\n    current.style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    const { top, items } = this.props\r\n    return (\r\n      <>\r\n        <ul style={top ? navTopStyles : navCenterStyles}>\r\n          {items.map((props, key) => (\r\n            <ListItem {...props} key={key} clickHandler={this.clickHandler} />\r\n          ))}\r\n        </ul>\r\n        <span\r\n          ref={this.underLine}\r\n          style={{\r\n            position: \"absolute\",\r\n            borderBottom: \"2px solid #e10000\",\r\n            transition: \"all 0.3s ease-in-out\",\r\n            margin: 0,\r\n            padding: 0,\r\n            zIndex: -1\r\n          }}\r\n          onTransitionEnd={this.transitionEndHandler}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}