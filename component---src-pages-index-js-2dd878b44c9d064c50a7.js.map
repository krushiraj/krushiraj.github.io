{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/CircularImage.js","webpack:///./src/components/ListItem.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/SEO.js"],"names":["items","name","IndexPage","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","style","display","alignItems","justifyContent","height","id","width","padding","textAlign","alignSelf","href","_components_CircularImage__WEBPACK_IMPORTED_MODULE_3__","size","textDecoration","textDecorationColor","fontSize","listStyle","margin","overflow","map","props","key","_components_ListItem__WEBPACK_IMPORTED_MODULE_4__","Object","assign","React","Component","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","json","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","alt","src","borderRadius","className","ListItemStyles","alink","StaticQueryContext","loader","enqueue","createContext","StaticQueryDataRenderer","staticQueryData","data","query","finalData","react_default","StaticQuery","children","Consumer","SEO","title","description","image","pathname","article","gatsby_browser_entry_StaticQuery","_ref2","_ref2$site$siteMetada","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","Helmet","content","property","_1376445457","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-2dd878b44c9d064c50a7.js","sourcesContent":["import React from \"react\"\r\nimport SEO from \"../components/SEO\"\r\nimport CircularImage from \"../components/CircularImage\"\r\nimport ListItem from \"../components/ListItem\"\r\n// import MiniTerminalLink from \"../components/MiniTerminalLink\"\r\n\r\nconst items = [\r\n  { name: \"about-me\" },\r\n  { name: \"my-works\" },\r\n  { name: \"experience\" },\r\n  { name: \"writings\" },\r\n  { name: \"skills\" },\r\n  { name: \"contact\" },\r\n  { name: \"resume\" },\r\n]\r\n\r\nexport default class IndexPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <SEO />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"100vh\",\r\n          }}\r\n        >\r\n          <div\r\n            id=\"nav\"\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"0\",\r\n              textAlign: \"center\",\r\n              alignSelf: \"center\",\r\n            }}\r\n          >\r\n            <a href=\"/\">\r\n              <CircularImage size=\"200\" />\r\n            </a>\r\n            <p\r\n              style={{\r\n                textDecoration: \"underline\",\r\n                textDecorationColor: \"#e10000\",\r\n                fontSize: \"2rem\",\r\n              }}\r\n            >\r\n              Krushi Raj Tula\r\n            </p>\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <ul\r\n                style={{\r\n                  listStyle: \"none\",\r\n                  margin: 0,\r\n                  padding: 0,\r\n                  width: \"100%\",\r\n                  overflow: \"auto\",\r\n                }}\r\n              >\r\n                {items.map((props, key) => (\r\n                  <ListItem {...props} key={key} />\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\n\r\nexport default ({ size }) => {\r\n  return (\r\n    <img\r\n      alt=\"Krushi Raj\"\r\n      src=\"/krushi.jpg\"\r\n      height={`${size}px`}\r\n      width=\"auto\"\r\n      id=\"logo\"\r\n      style={{\r\n        borderRadius: \"50%\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport ListItemStyles from \"./listitem.module.css\"\r\n\r\nexport default ({ name }) => {\r\n  return (\r\n    <li style={{ display: \"inline-block\", padding: \"0 5px\" }}>\r\n      <a className={ListItemStyles.alink} href={`#${name}`}>\r\n        {name}\r\n      </a>\r\n    </li>\r\n  )\r\n}\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nconst SEO = ({ title, description, image, pathname, article }) => (\r\n  <StaticQuery\r\n    query={query}\r\n    render={({\r\n      site: {\r\n        siteMetadata: {\r\n          defaultTitle,\r\n          titleTemplate,\r\n          defaultDescription,\r\n          siteUrl,\r\n          defaultImage,\r\n          twitterUsername,\r\n        },\r\n      },\r\n    }) => {\r\n      const seo = {\r\n        title: title || defaultTitle,\r\n        description: description || defaultDescription,\r\n        image: `${siteUrl}${image || defaultImage}`,\r\n        url: `${siteUrl}${pathname || \"/\"}`,\r\n      }\r\n\r\n      return (\r\n        <>\r\n          <Helmet title={seo.title} titleTemplate={titleTemplate}>\r\n            <meta name=\"description\" content={seo.description} />\r\n            <meta name=\"image\" content={seo.image} />\r\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\r\n            {(article ? true : null) && (\r\n              <meta property=\"og:type\" content=\"article\" />\r\n            )}\r\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\r\n            {seo.description && (\r\n              <meta property=\"og:description\" content={seo.description} />\r\n            )}\r\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            {twitterUsername && (\r\n              <meta name=\"twitter:creator\" content={twitterUsername} />\r\n            )}\r\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\r\n            {seo.description && (\r\n              <meta name=\"twitter:description\" content={seo.description} />\r\n            )}\r\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\r\n          </Helmet>\r\n        </>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nexport default SEO\r\n\r\nSEO.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  image: PropTypes.string,\r\n  pathname: PropTypes.string,\r\n  article: PropTypes.bool,\r\n}\r\n\r\nSEO.defaultProps = {\r\n  title: null,\r\n  description: null,\r\n  image: null,\r\n  pathname: null,\r\n  article: false,\r\n}\r\n\r\nconst query = graphql`\r\n  query SEO {\r\n    site {\r\n      siteMetadata {\r\n        defaultTitle: title\r\n        titleTemplate\r\n        defaultDescription: description\r\n        siteUrl: url\r\n        defaultImage: image\r\n        twitterUsername\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}